##
# OPTIONS
set -g default-terminal "screen-256color"
# set-option -ga terminal-overrides ",*259col*:Tc"
set -g default-terminal "screen-256color"
set -ga terminal-overrides ",xterm-256color:Tc"

set -g history-limit 40000        # Scrollback history for new panes
set -g buffer-limit 20            # Count of paste buffer entries to retain
set -sg escape-time 0             # Delay before <ESC> is passed into a contained process
set -g display-time 1500          # Flash message display time in MS
set -g remain-on-exit off         # Persist panes that have no running process. Kinda sucks
set -g repeat-time 300            # chorded binding timeout duration
setw -g allow-rename off          # Let process control window name
setw -g automatic-rename off      # Let processes auto name window
setw -g aggressive-resize on      # Smaller session sizes will shrink view port in larger sessions
set -s focus-events on            # Allow hover focus detection for processes
set-option -g renumber-windows on # Auto renumber window hotkeys when one is deleted
set -g set-titles on              # Set parent terminal title to reflect current window in tmux session
set -g set-titles-string '#W@#{pane_current_path} > #T'
set -g base-index 1               # Start index of window
setw -g pane-base-index 1         # Start index of pane
set -g mouse on                   # Enable mouse support
set -g visual-activity on         # Activity bell and whistles
setw -g xterm-keys on             # Allow C+arrow keys

setw -g window-status-format "".
set-window-option -g other-pane-height 25
set-window-option -g other-pane-width 80

# Prefer vi style key table
setw -g mode-keys vi
set -g @copy_use_osc52_fallback on
bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel 'xclip -in -selection clipboard'
bind-key -T copy-mode-vi v send-keys -X begin-selection
# List of enviornment variables to keep from startup shell
set -g update-environment \
  "DISPLAY\
  SSH_ASKPASS\
  SSH_AUTH_SOCK\
  SSH_AGENT_PID\
  SSH_CONNECTION\
  SSH_TTY\
  WINDOWID\
  XAUTHORITY"

##
# BINDINGS

unbind C-b        # C-b prefix is awkward
set -g prefix C-a # C-a to mimic screen

unbind '%'
unbind '}'
unbind '"'
unbind '{'
unbind '['
unbind ']'
unbind "'"
unbind n
unbind p
unbind l
unbind M-n
unbind M-p
unbind o
unbind &
unbind =
unbind M-Up
unbind M-Down 
unbind M-Right 

bind r source-file ~/.tmux.conf \; display "Config reloaded" # Reload tmux configuration 

bind > swap-pane -D       # swap current pane with the next one
bind < swap-pane -U       # swap current pane with the previous one

bind -r C-a select-window -l # Swap back to last pane

bind-key + select-layout main-horizontal
bind-key = select-layout main-vertical

bind c new-window -c "#{pane_current_path}" # new window and retain cwd

bind v split-window -h -c "#{pane_current_path}" # Split panes like vim
bind s split-window -v -c "#{pane_current_path}" # HSplit panes like vim

# Select pane and windows
bind -r Tab last-window   # cycle thru MRU tabs
bind -r C-o swap-pane -D

# Link window
bind L command-prompt -p "Link window from (session:window): " "link-window -s %% -a"

# Detach from session
bind d detach

bind x kill-pane
bind X kill-window
bind C-x confirm-before -p "kill other windows? (y/n)" "kill-window -a"
bind Q confirm-before -p "kill-session #S? (y/n)" kill-session

is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"

bind m setw monitor-activity \; display-message 'Monitor window activity [#{?monitor-activity,ON,OFF}]'
bind M if -F '#{monitor-silence}' \
    'setw monitor-silence 0 ; display-message "Monitor window silence [OFF]"' \
    'command-prompt -p "Monitor silence: interval (s)" "setw monitor-silence %%"'

# trigger copy mode by
bind Enter copy-mode
bind p paste-buffer
bind C-p choose-buffer

# When scrolling with mouse wheel, reduce number of scrolled rows per tick to "2" (default is 5)
bind -T copy-mode-vi WheelUpPane       select-pane \; send-keys -X -N 2 scroll-up
bind -T copy-mode-vi WheelDownPane     select-pane \; send-keys -X -N 2 scroll-down

bind -T root f4 \
    set prefix None \;\
    set key-table off \;\
    set status-style "fg=$color_status_text,bg=$color_window_off_status_bg" \;\
    set window-status-current-format "#[fg=$color_window_off_status_bg,bg=$color_window_off_status_current_bg]$seperator_right#[default] #I:#W# #[fg=$color_window_off_status_current_bg,bg=$color_window_off_status_bg]$seperator_right#[default]" \;\
    set window-status-current-style "fg=$color_dark,bold,bg=$color_window_off_status_current_bg" \;\
    if -F '#{pane_in_mode}' 'send-keys -X cancel' \;\
    refresh-client -S \;\

bind -T off f4  \
  set -u prefix \;\
  set -u key-table \;\
  set -u status-style \;\
  set -u window-status-current-style \;\
  set -u window-status-current-format \;\
  refresh-client -S

# Run all plugins' scripts
color_dark="#272c33"
color_light="#ffffff"
color_session_text="#ffffff"
color_status_text="colour245"
color_main="#5cadf1"
color_secondary="#51b5c3"
color_level_ok="#96c475"
color_level_warn="#d29a61"
color_level_stress="#e26a72"
color_window_off_indicator="colour088"
color_window_off_status_bg="colour238"
color_window_off_status_current_bg="colour254"
seperator_left=" "
seperator_right=" "

set -g mode-style "fg=default,bg=$color_main"
set -g message-style "fg=$color_main,bg=$color_dark" # command line style
set -g status-style "fg=$color_status_text,bg=$color_dark" # status line style
set -g message-command-style "fg=$color_light" # alerts
set -g window-status-separator "" # window segments in status line
 
setw -g window-status-style "fg=$color_status_text,bg=$color_dark"
setw -g window-status-format "  #I:#W  "
setw -g window-status-current-style "fg=$color_light,bold,bg=$color_main"

# Selected window
setw -g window-status-current-format "\
#[fg=$color_dark,bg=$color_main]$seperator_right#[default]\
#[fg=$color_dark,bg=$color_main] #I:#W #[default]\
#[fg=$color_main,bg=$color_dark]$seperator_right#[default]"

# when window has monitoring notification
setw -g window-status-activity-style "fg=$color_main"

# outline for active pane
setw -g pane-active-border-style "fg=$color_main"

# general status bar settings
set -g status on
set -g status-interval 5
set -g status-position bottom
set -g status-justify left
set -g status-right-length 100

wg_is_zoomed="#[fg=$color_dark,bg=$color_secondary]#{?window_zoomed_flag,[Z],}#[default]"
wg_git_status="#[fg=$color_secondary] #{simple_git_status} #[default]"

# #S is session number
set -g status-left "#[fg=$color_session_text] %A #[default]"
 
set -g status-right "#{prefix_highlight} $wg_is_keys_off$wg_is_zoomed$wg_kubernetes |$wg_git_status#[fg=$color_main][#(cd #{pane_current_path} && ~/scripts/statusbar/buildstatus)#[fg=$color_main]]"

# Configure tmux-prefix-highlight colors
set -g @prefix_highlight_output_prefix '['
set -g @prefix_highlight_output_suffix ']'
set -g @prefix_highlight_fg "$color_dark"
set -g @prefix_highlight_bg "$color_secondary"
set -g @prefix_highlight_show_copy_mode 'on'
set -g @prefix_highlight_copy_mode_attr "fg=$color_dark,bg=$color_secondary"

set -g @plugin 'tmux-plugins/tpm'

#####
set -g @plugin 'fcsonline/tmux-thumbs'
set -g @thumbs-command 'echo -n {} | pbcopy'
set -g @thumbs-key F
set -g @thumbs-alphabet qwerty-homerow
#####


set -g @plugin 'yardnsm/tmux-1password'
set -g @1password-copy-to-clipboard 'on'
set -g @1password-key 'p'

#####
set -g @plugin 'tmux-plugins/tmux-prefix-highlight' # Display when you've pressed the prefix
#####

set -g @plugin 'kristijanhusak/tmux-simple-git-status'


######
##
# Online status doesn't work under VPN
# set -g @plugin 'tmux-plugins/tmux-online-status'
# online and offline icon for tmux-online-status
# set -g @online_icon "#[fg=$color_level_ok]●#[default]"
# set -g @offline_icon "#[fg=$color_level_stress]●#[default]"
######

set -g @plugin 'sainnhe/tmux-fzf'
TMUX_FZF_SED="/usr/local/bin/gsed"
set -g @tmux-fzf-launch-key 'f'
# TMUX_FZF_MENU=\
# "foo\necho 'Hello!'\n"\
# "bar\nls ~\n"\
# "sh\nsh ~/test.sh\n"

####
set -g @plugin 'samoshkin/tmux-plugin-sysstat'
####
run '~/.tmux/plugins/tpm/tpm'

