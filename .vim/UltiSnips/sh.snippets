priority -50

snippet temp "Tempfile" bA
${1:TMPFILE}="$(mktemp -t ${3:--suffix=${4:.SUFFIX}} ${2:`!p
snip.rv = re.sub(r'[^a-zA-Z]', '_', snip.fn) or "untitled"
`}.XXXXXX)"
${5:${6/(.+)/trap "/}${6:rm -f '$${1/.*\s//}'}${6/(.+)/" 0               # EXIT\n/}${7/(.+)/trap "/}${7:rm -f '$${1/.*\s//}'; exit 1}${7/(.+)/" 2       # INT\n/}${8/(.+)/trap "/}${8:rm -f '$${1/.*\s//}'; exit 1}${8/(.+)/" 1 15    # HUP TERM\n/}}
endsnippet

snippet case "case" bA
case ${1:word} in
	${2:regex|pattern} )
		$0;;
	*)
		$1;;
esac
endsnippet

snippet forin "for in string list" bA
for ${1} in "$${1}s"; do
	${0:${VISUAL}}
done
endsnippet

snippet here "heredoc"
<<-${1:HERE}
	$0
${1}
endsnippet

snippet if "if ... then (if)" bA
if [[ ${1:condition} ]]; then
	${0:${VISUAL}}
fi
endsnippet

snippet until "until ... (done)" bA
until [[ ${1:condition} ]]; do
	${0:#statements}
done
endsnippet

snippet while "while ... (done)"
while [[ ${1:condition} ]]; do
	${0:#statements}
done
endsnippet

snippet dir "current directory"
$(dirname "\${0}")${1:/relative/path}
endsnippet

snippet filename "current filename" 
$(basename "\${0}")
endsnippet

snippet argloop "loop over args and shift" bA
ARGS=()
while (( "\${#}" )); do
	case "\${1}" in
		-p|--profile)
			# Pull variables with a space
			shift
			(( "\${#}")) && { COMMAND="\${1}"; shift; }
			;;
			-p=*|--profile=*)
				# Pull variables from assignment
				COMMAND="\${1#*=}"
				shift
				;;
			*)
				ARGS+=("\${1}")
				shift
				;;
	esac
done

# Passthrough args
set -- "${ARGS[@]:-}"
unset ARGS
endsnippet

snippet default "defaultValue"
\${ARG:-default}
endsnippet

snippet isempty "check if var is empty" bA
if [ -z "$${1:var}" ]; then
	${0}
fi
endsnippet

snippet forarr "forin array" bA
declare -a ${1}s=()
for ${1} in "${${1}s[@]}"; do
	${0:${VISUAL}}
done
endsnippet



# vim:ft=snippets:
